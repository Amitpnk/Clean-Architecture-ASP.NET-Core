// <auto-generated />
using System;
using CleanArch.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CleanArch.Persistence.Migrations.Application
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CleanArch.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9152401-61db-4b68-8392-9610c7a1ca17"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Concert",
                            Name = "Concert"
                        },
                        new
                        {
                            Id = new Guid("ba84a7a1-fe8d-48cc-afb1-13a295e91c79"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Musical",
                            Name = "Musical"
                        },
                        new
                        {
                            Id = new Guid("d8146bb1-8d53-4942-ac7d-f04999445d88"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Conference",
                            Name = "Conference"
                        });
                });

            modelBuilder.Entity("CleanArch.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3902ca40-f621-4fbc-81eb-04f822ded9ee"),
                            CategoryId = new Guid("ba84a7a1-fe8d-48cc-afb1-13a295e91c79"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 9, 3, 13, 13, 46, 732, DateTimeKind.Local).AddTicks(4721),
                            Description = "Guitar music concert 2020",
                            Name = "Guitar hits 2020"
                        },
                        new
                        {
                            Id = new Guid("8c5affbb-8ccc-4117-9f96-dd792a8dd1fe"),
                            CategoryId = new Guid("ba84a7a1-fe8d-48cc-afb1-13a295e91c79"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2021, 9, 3, 13, 13, 46, 736, DateTimeKind.Local).AddTicks(1569),
                            Description = "Guitar music concert 2021",
                            Name = "Guitar hits 2021"
                        },
                        new
                        {
                            Id = new Guid("65bc8b27-b023-40b0-a43d-b76b87629724"),
                            CategoryId = new Guid("d8146bb1-8d53-4942-ac7d-f04999445d88"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 3, 3, 13, 13, 46, 736, DateTimeKind.Local).AddTicks(1677),
                            Description = "The tech conference in c#",
                            Name = "Event 2020"
                        },
                        new
                        {
                            Id = new Guid("65d8acdd-0538-4faf-806a-b15f8c8920b5"),
                            CategoryId = new Guid("d8146bb1-8d53-4942-ac7d-f04999445d88"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Date = new DateTime(2022, 1, 3, 13, 13, 46, 736, DateTimeKind.Local).AddTicks(1689),
                            Description = "The tech conference in .net core",
                            Name = "Event 2021"
                        });
                });

            modelBuilder.Entity("CleanArch.Domain.Entities.Event", b =>
                {
                    b.HasOne("CleanArch.Domain.Entities.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CleanArch.Domain.Entities.Category", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
